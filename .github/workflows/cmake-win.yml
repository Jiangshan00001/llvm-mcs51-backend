name: CMake

on:
  push:
    branches: 
    - main
  pull_request:
    branches: 
    - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    #runs-on: windows-2016
    runs-on: windows-latest

    steps:    
       
    - name: get psdrive info
      run: Get-PSDrive
    
    - uses: actions/checkout@v2
    - name: get llvm
      run: |
           mkdir c:\llvm1300
           git clone --branch llvmorg-13.0.0 --depth 1 https://github.com/llvm/llvm-project.git c:/llvm1300
      
    - name: move mcs51 to llvm tree
      run: |
           ls
           Copy-Item -Path ./llvm-project/* -Destination c:/llvm1300/ -Recurse -Force
    
    - name: Configure vc
      shell: pwsh
      run: |
           ls
           ${{github.workspace}}/.github/workflows/vcbuild.cmd -arch=x64 -host_arch=x64

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      shell: pwsh
      run:  |
            ls
            mkdir -p ./llvm1300/llvm
            cd ./llvm1300/llvm
            cmake c:/llvm1300/llvm   -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/LLVMBIN/ -DLLVM_TARGETS_TO_BUILD=X86  -DLLVM_OPTIMIZED_TABLEGEN=1 -DLLVM_ENABLE_PROJECTS=clang -Thost=x64 -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=MCS51

    - name: Build
      # Build your program with the given configuration
      run: |
           ls
           cd ./llvm1300/llvm
           ls build/
           cmake --build ./build --config ${{env.BUILD_TYPE}}
           msbuild ./build/INSTALL.vcxproj  -p:Configuration=${{env.BUILD_TYPE}}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: llvm_bin_win
        path: ${{github.workspace}}/LLVMBIN/
        retention-days: 30
        
  deploy:
    runs-on: ubuntu-latest
    needs:[build]

    steps:
    - name: Checkout
      uses: actions/checkout@V2.3.1
      
    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: llvm_bin_win
        
    
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@4.1.7
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-bin-win # The branch the action should deploy to.
        FOLDER: 'llvm_bin_win'
        CLEAN: true # Automatically remove deleted files from the deploy branch
        SINGLE_COMMIT: true
